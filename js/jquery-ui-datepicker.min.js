$(document).ready(function() {
  var calendars = {
    calendar1: {
      element: $('#calendar1'),
      input: $('#checkIn'),
      month: new Date().getMonth(),
      year: new Date().getFullYear()
    },
    calendar2: {
      element: $('#calendar2'),
      input: $('#checkOut'),
      month: new Date().getMonth(),
      year: new Date().getFullYear()
    },
    calendar3: {
      element: $('#calendar3'),
      input: $('#checkInDate'),
      month: new Date().getMonth(),
      year: new Date().getFullYear()
    },
    calendar4: {
      element: $('#calendar4'),
      input: $('#checkOutDate'),
      month: new Date().getMonth(),
      year: new Date().getFullYear()
    }
  };

  function generateCalendar(month, year, calendar) {
    var daysInMonth = new Date(year, month + 1, 0).getDate();
    var firstDay = new Date(year, month, 1).getDay();

    var monthYearText = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;
    calendar.element.find('.monthYear').text(monthYearText);

    var calendarHtml = '<table>';
    calendarHtml += '<tr><th>Su</th><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th></tr><tr>';

    for (var i = 0; i < firstDay; i++) {
      calendarHtml += '<td></td>';
    }

    for (var day = 1; day <= daysInMonth; day++) {
      if ((i % 7 === 0) && (day > 1)) {
        calendarHtml += '</tr><tr>';
      }
      calendarHtml += '<td><a href="javascript:void(0);">' + day + '</a></td>';
      i++;
    }

    while (i % 7 !== 0) {
      calendarHtml += '<td></td>';
      i++;
    }

    calendarHtml += '</tr></table>';
    calendar.element.find('.calendarBody').html(calendarHtml);
  }

  function showCalendars() {
    $('.custom-calendar').show();
    generateCalendar(calendars.calendar1.month, calendars.calendar1.year, calendars.calendar1);
    generateCalendar(calendars.calendar2.month, calendars.calendar2.year, calendars.calendar2);
    generateCalendar(calendars.calendar3.month, calendars.calendar3.year, calendars.calendar3);
    generateCalendar(calendars.calendar4.month, calendars.calendar4.year, calendars.calendar4);
  }

// function positionCalendars() {
//     var offset1 = calendars.calendar1.input.offset();
//     calendars.calendar1.element.css({
//         top: offset1.top + calendars.calendar1.input.outerHeight(),
//         left: offset1.left
//     });

//     var offset2 = calendars.calendar2.input.offset();
//     calendars.calendar2.element.css({
//         top: offset2.top + calendars.calendar2.input.outerHeight(),
//         left: offset2.left
//     });
// }

  $('.dateInput').on('focus', function() {
    // positionCalendars();
    showCalendars();
  });

  // $(document).on('click', function(event) {
  //   if (!$(event.target).closest('.custom-calendar, .dateInput').length) {
  //     $('.custom-calendar').hide();
  //   }
  // });

  $('.calendarBody').on('click', 'td', function() {
    $(this).closest('.custom-calendar').find('td').removeClass('selected');
    $(this).addClass('selected');
      var day = $(this).text();
      if (day) {
        var calendarId = $(this).closest('.custom-calendar').attr('id');
        var monthName = new Date(calendars[calendarId].year, calendars[calendarId].month).toLocaleString('default', { month: 'short' });
        var selectedDate = `${day} ${monthName}`;
        //var selectedDate = `${day}/${calendars[calendarId].month + 1}`;
        console.log(selectedDate);
        calendars[calendarId].input.val(selectedDate);
      }
  });

  $('.prevMonth').on('click', function(e) {
      var calendarId = $(this).data('calendar');
      calendars[calendarId].month--;
      if (calendars[calendarId].month < 0) {
          calendars[calendarId].month = 11;
          calendars[calendarId].year--;
      }
      generateCalendar(calendars[calendarId].month, calendars[calendarId].year, calendars[calendarId]);
      e.preventDefault();
  });

  $('.nextMonth').on('click', function(e) {
      var calendarId = $(this).data('calendar');
      calendars[calendarId].month++;
      if (calendars[calendarId].month > 11) {
          calendars[calendarId].month = 0;
          calendars[calendarId].year++;
      }
      generateCalendar(calendars[calendarId].month, calendars[calendarId].year, calendars[calendarId]);
      e.preventDefault();
  });
});